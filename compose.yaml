version: '3.8'
services:
  springboot:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8111:8111"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=${REDIS_PORT}
      - FLASK_API_URL=${FLASK_PRIVATE_URL}
      - SPRING_ELASTICSEARCH_REST_URIS=${ELASTIC_PRIVATE_URL}
      - SPRING_ELASTICSEARCH_REST_USERNAME=${ELASTIC_USERNAME}
      - SPRING_ELASTICSEARCH_REST_PASSWORD=${ELASTIC_PASSWORD}
    depends_on:
      - mysql
      - redis
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.5"
    restart: unless-stopped
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=128M
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PWD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    deploy:
      resources:
        limits:
          memory: 256m
          cpus: "0.2"
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:latest
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    deploy:
      resources:
        limits:
          memory: 128m
          cpus: "0.1"
    restart: unless-stopped
    networks:
      - app-network

volumes:
  mysql-data:
  redis-data:

networks:
  app-network:
    driver: bridge